There is my project that converts json data to csv file ;
Soo my first json data is coming from a url and i will imput json data;
my json is "{
  "results": [
    {
      "gender": "female",
      "name": {
        "title": "Miss",
        "first": "Yolanda",
        "last": "Fuentes"
      },
      "location": {
        "street": {
          "number": 78,
          "name": "Calle de Atocha"
        },
        "city": "Vigo",
        "state": "Canarias",
        "country": "Spain",
        "postcode": 35973,
        "coordinates": {
          "latitude": "-31.6787",
          "longitude": "45.7068"
        },
        "timezone": {
          "offset": "-7:00",
          "description": "Mountain Time (US & Canada)"
        }
      },
      "email": "yolanda.fuentes@example.com",
      "login": {
        "uuid": "f45206f3-4cc3-4c92-a6a9-b4f15c23c106",
        "username": "organicpeacock354",
        "password": "orchard",
        "salt": "UXpWJjky",
        "md5": "c7c3588d906fe5d95939acadbd74d184",
        "sha1": "44acdf4fc999b1b13a70fe48c4f973e0e249552c",
        "sha256": "612c2302ad1e6f20ea8e467946d9780a9053a0094dab108b44369b1189903105"
      },
      "dob": {
        "date": "2000-04-14T08:42:40.097Z",
        "age": 24
      },
      "registered": {
        "date": "2004-02-05T09:11:34.898Z",
        "age": 21
      },
      "phone": "971-271-036",
      "cell": "654-603-119",
      "id": {
        "name": "DNI",
        "value": "97934764-P"
      },
      "picture": {
        "large": "https://randomuser.me/api/portraits/women/33.jpg",
        "medium": "https://randomuser.me/api/portraits/med/women/33.jpg",
        "thumbnail": "https://randomuser.me/api/portraits/thumb/women/33.jpg"
      },
      "nat": "ES"
    }
  ],
  "info": {
    "seed": "54e4c9e3ff0582d8",
    "results": 1,
    "page": 1,
    "version": "1.4"
  }
}
"
my url is  "https://randomuser.me/api/"

"Every time I send JSON data, it should keep getting added to the file with a serial number and in a row-wise manner."
i want this data to be converted to csv file and all the csv file in the "csv_file" folder in the project directory;

example "
json data is "{
  "results": [
    {
      "gender": "female",
      "name": {
        "title": "Miss",
        "first": "Yolanda",
        "last": "Fuentes"
      },
      "location": {
        "street": {
          "number": 78,
          "name": "Calle de Atocha"
        },
        "city": "Vigo",
        "state": "Canarias",
        "country": "Spain",
        "postcode": 35973,
        "coordinates": {
          "latitude": "-31.6787",
          "longitude": "45.7068"
        },
        "timezone": {
          "offset": "-7:00",
          "description": "Mountain Time (US & Canada)"
        }
      },
      "email": "yolanda.fuentes@example.com",
      "login": {
        "uuid": "f45206f3-4cc3-4c92-a6a9-b4f15c23c106",
        "username": "organicpeacock354",
        "password": "orchard",
        "salt": "UXpWJjky",
        "md5": "c7c3588d906fe5d95939acadbd74d184",
        "sha1": "44acdf4fc999b1b13a70fe48c4f973e0e249552c",
        "sha256": "612c2302ad1e6f20ea8e467946d9780a9053a0094dab108b44369b1189903105"
      },
      "dob": {
        "date": "2000-04-14T08:42:40.097Z",
        "age": 24
      },
      "registered": {
        "date": "2004-02-05T09:11:34.898Z",
        "age": 21
      },
      "phone": "971-271-036",
      "cell": "654-603-119",
      "id": {
        "name": "DNI",
        "value": "97934764-P"
      },
      "picture": {
        "large": "https://randomuser.me/api/portraits/women/33.jpg",
        "medium": "https://randomuser.me/api/portraits/med/women/33.jpg",
        "thumbnail": "https://randomuser.me/api/portraits/thumb/women/33.jpg"
      },
      "nat": "ES"
    }
  ],
  "info": {
    "seed": "54e4c9e3ff0582d8",
    "results": 1,
    "page": 1,
    "version": "1.4"
  }
}
"
then store like this
Gender	Title	First Name	Last Name	Street Number	Street Name	City	State	Country	Postcode	Latitude	Longitude	Timezone Offset	Timezone Description	Email	UUID	Username	Password	Salt	MD5	SHA1	SHA256	DOB	Age	Registered Date	Registered Age	Phone	Cell	ID Name	ID Value	Picture (Large)	Picture (Medium)	Picture (Thumbnail)	Nationality
Female	Miss	Yolanda	Fuentes	78	Calle de Atocha	Vigo	Canarias	Spain	35973	-31.6787	45.7068	-7:00	Mountain Time (US & Canada)	yolanda.fuentes@example.com	f45206f3-4cc3-4c92-a6a9-b4f15c23c106	organicpeacock354	orchard	UXpWJjky	c7c3588d906fe5d95939acadbd74d184	44acdf4fc999b1b13a70fe48c4f973e0e249552c	612c2302ad1e6f20ea8e467946d9780a9053a0094dab108b44369b1189903105	2000-04-14T08:42:40.097Z	24	2004-02-05T09:11:34.898Z	21	971-271-036	654-603-119	DNI	97934764-P				ES"
here are my file structure "amanprajapati@Amans-MacBook-Air-2 JSONTablify % ls
csv_file                index.js                package-lock.json       src
fehgjb                  node_modules            package.json
amanprajapati@Amans-MacBook-Air-2 JSONTablify % cd src              
amanprajapati@Amans-MacBook-Air-2 src % ls
controllers     database        models          routers         service
amanprajapati@Amans-MacBook-Air-2 src % cd controllers 
amanprajapati@Amans-MacBook-Air-2 controllers % ls
csv.controller.js       json.controller.js      url.controller.js
amanprajapati@Amans-MacBook-Air-2 controllers % cd ..
amanprajapati@Amans-MacBook-Air-2 src % cd database    
amanprajapati@Amans-MacBook-Air-2 database % ls
connect.js
amanprajapati@Amans-MacBook-Air-2 database % cd ..
amanprajapati@Amans-MacBook-Air-2 src % cd models      
amanprajapati@Amans-MacBook-Air-2 models % ls
json.model.js
amanprajapati@Amans-MacBook-Air-2 models % cd ..
amanprajapati@Amans-MacBook-Air-2 src % cd routers     
amanprajapati@Amans-MacBook-Air-2 routers % ls
v1
amanprajapati@Amans-MacBook-Air-2 routers % cd v1/
amanprajapati@Amans-MacBook-Air-2 v1 % ls
json.routes.js  v1.router.js
amanprajapati@Amans-MacBook-Air-2 v1 % cd ../..
amanprajapati@Amans-MacBook-Air-2 src % cd service     
amanprajapati@Amans-MacBook-Air-2 service % ls
createfile.service.js
amanprajapati@Amans-MacBook-Air-2 service % 
"
here is my code
csv.controller.js is "const { Parser } = require('json2csv');
const fs = require('fs');

const csvData = async () => {
    // this will store the data in database
    // complete the code
}
module.exports = csvData;", json.controller.js is "const { Parser } = require('json2csv');
const fs = require('fs');
const jsonModel =  require('./../models/json.model');
const jsonData = async () => {
    // this wiil take json as input and convert it into csv 
    // complete the code
}

module.exports = jsonData;", url.controller.js is "

const urlData = async () => {
    // this will take url as input and convert it into json then into database
    // complete the code
}

module.exports = urlData;" , connect.js is "const mongoose = require('mongoose');
require('dotenv').config();

const NODE_ENV = process.env.NODE_ENV || 'DEV';
const MONGODB_URI = process.env[`${NODE_ENV}_MONGODB_URI`];

const connectionOptions = {
    maxPoolSize: 10,
    serverSelectionTimeoutMS: 5000,
    socketTimeoutMS: 45000,
    family: 4
};

async function dbConnect() {
    try {
        if (!MONGODB_URI) {
            throw new Error('MONGODB_URI is not defined in environment variables');
        }
        const connection = await mongoose.connect(MONGODB_URI, connectionOptions);
        console.log(`Database connected successfully - ${NODE_ENV} environment`);
        return connection;
    } catch (error) {
        console.error('Database connection failed:', error);
        throw error;
    }
}

module.exports = { dbConnect };", json.model.js is "const mongoose = require('mongoose');

const jsonSchema = new mongoose.Schema({
    // complete the code
})

const jsonModel = mongoose.model('json', jsonSchema);
module.exports = jsonModel;", json.routes.js is "const exppress = require('express');
const csvData = require('./../../controllers/csv.controller');
const urlData =  require('./../../controllers/url.controller');
const jsonData = require('./../../controllers/json.controller')

const jsonRouter = exppress.Router();

jsonRouter.post('/rawjson', jsonData);
jsonRouter.post('urljson', urlData);
jsonRouter.get('/csv',csvData);

module.exports = jsonRouter;", v1.router.js is "const exppress = require('express');
const v1Router = exppress.Router();
const jsonRouter = require('./json.routes')

v1Router.use('/json', jsonRouter)
module.exports = v1Router;
", createfile.service.js is "const fs = require('fs');

const createFile = async ()=>{
    // this will create a file in csv_file folder with the name of the current date
}
module.exports = {createFile}" , my index.js is "const exppress = require('express');
const cors = require('cors');
require('dotenv').config();
const { dbConnect } = require('./src/database/connect');
const v1Router = require('./src/routers/v1/v1.router');

const app = exppress();
app.use(cors());

const NODE_ENV = process.env.NODE_ENV;
const PORT = process.env.DEV_PORT;


app.use('/api/v1',v1Router);

async function startServer() {
    try {
        await dbConnect();
        app.listen(PORT, () => {
            console.log(`Server is running on port ${PORT} - ${NODE_ENV} enviroment`)
        })

    } catch (error) {
        console.error('Error starting server:', error);
        process.exit(1);
    }
}
startServer();", .env is "DEV_MONGODB_URI=mongodb+srv://aman3255:1IgXRt4CVFblvbN1@cluster0.ph8p3.mongodb.net/JSONTOCSV
DEV_PORT=9000
NODE_ENV=DEV", my package.json is "{
  "name": "jsontablify",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "fs": "^0.0.1-security",
    "json2csv": "^6.0.0-alpha.2",
    "mongoose": "^8.12.1"
  }
}
"